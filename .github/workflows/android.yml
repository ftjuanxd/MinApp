name: Android CI/CD Pipeline

on:
  push:
    branches:
      - main
      - 'sprint-*/*'
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Fix line endings on gradlew
        run: |
          # Instala los paquetes necesarios si no están
          sudo apt-get update -qq && sudo apt-get install dos2unix -qq
          # Convierte de CRLF a LF
          dos2unix gradlew

      - name: Fix line endings on gradlew
        run: sed -i 's/\r$//' gradlew

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Gradle
        run: ./gradlew assembleDebug

      - name: Run unit tests
        run: ./gradlew testDebugUnitTest

      - name: Run instrumentation tests
        run: |
          adb devices # ensure emulator
          ./gradlew connectedDebugAndroidTest

  publish-artifact:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Upload APK artifact
        uses: actions/upload-artifact@v3
        with:
          name: debug-apk
          path: app/build/outputs/apk/debug/app-debug.apk

  # Puedes agregar un job de despliegue a Google Play aquí cuando estés listo.
