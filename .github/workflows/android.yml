name: Android CI/CD Pipeline

on:
  push:
    branches:
      - main
      - 'sprint-*/*'
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: 1. Checkout code
        uses: actions/checkout@v4

      - name: 2. Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: 3. Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          # Aceptar las licencias del SDK es una buena pr√°ctica para evitar fallos.
          accept-android-sdk-licenses: true

      - name: 4. Fix gradlew line endings
        run: sed -i 's/\r$//' ./gradlew

      - name: 5. Make gradlew executable
        run: chmod +x ./gradlew

      - name: 6. Build and run unit tests
        run: ./gradlew build testDebugUnitTest

      - name: 7. Run Android instrumented tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 31
          script: ./gradlew connectedCheck

  # Este job se ejecuta solo si 'build-and-test' es exitoso y estamos en la rama 'main'
  publish-artifact:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: 1. Checkout code
        uses: actions/checkout@v4

      - name: 2. Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: 3. Fix gradlew line endings
        run: sed -i 's/\r$//' ./gradlew

      - name: 4. Make gradlew executable
        run: chmod +x ./gradlew
      
      - name: 5. Build APK
        run: ./gradlew assembleDebug

      - name: 6. Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: app/build/outputs/apk/debug/app-debug.apk

